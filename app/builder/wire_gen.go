// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package builder

import (
	"github.com/arabian9ts/sweeTest/app/interface/controllers"
	"github.com/arabian9ts/sweeTest/app/interface/database"
	"github.com/arabian9ts/sweeTest/app/interface/presenter"
	"github.com/arabian9ts/sweeTest/app/usecase/interactor"
	"github.com/arabian9ts/sweeTest/app/usecase/repository"
	"github.com/arabian9ts/sweeTest/infrastructure"
	"github.com/google/wire"
)

// Injectors from wire.go:

func InitializeUserRepository() (repository.UserRepository, error) {
	sqlHandler := infrastructure.NewSqlHandler()
	userRepository, err := database.NewUserRepository(sqlHandler)
	if err != nil {
		return nil, err
	}
	return userRepository, nil
}

func InitializeStudentsController() (*controllers.StudentsController, error) {
	sqlHandler := infrastructure.NewSqlHandler()
	userRepository, err := database.NewUserRepository(sqlHandler)
	if err != nil {
		return nil, err
	}
	userOutput := presenter.NewUserPresenter()
	studentsController, err := controllers.NewStudentsController(userRepository, userOutput)
	if err != nil {
		return nil, err
	}
	return studentsController, nil
}

func InitializeTasController() (*controllers.TasController, error) {
	sqlHandler := infrastructure.NewSqlHandler()
	userRepository, err := database.NewUserRepository(sqlHandler)
	if err != nil {
		return nil, err
	}
	userOutput := presenter.NewUserPresenter()
	tasController, err := controllers.NewTasController(userRepository, userOutput)
	if err != nil {
		return nil, err
	}
	return tasController, nil
}

func InitializeTeachersController() (*controllers.TeachersController, error) {
	sqlHandler := infrastructure.NewSqlHandler()
	userRepository, err := database.NewUserRepository(sqlHandler)
	if err != nil {
		return nil, err
	}
	userOutput := presenter.NewUserPresenter()
	teachersController, err := controllers.NewTeachersController(userRepository, userOutput)
	if err != nil {
		return nil, err
	}
	return teachersController, nil
}

// wire.go:

var repositorySet = wire.NewSet(infrastructure.NewSqlHandler, database.NewUserRepository)

var controllerSet = wire.NewSet(infrastructure.NewSqlHandler, database.NewUserRepository, controllers.NewStudentsController, controllers.NewTasController, controllers.NewTeachersController, interactor.NewUserInteractor, presenter.NewUserPresenter)
